/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.hyperswitch.client.model.Connector;
import com.hyperswitch.client.model.CountryAlpha2;
import com.hyperswitch.client.model.Currency;
import com.hyperswitch.client.model.PayoutEntityType;
import com.hyperswitch.client.model.PayoutMethodData;
import com.hyperswitch.client.model.PayoutType;
import com.hyperswitch.client.model.RoutingAlgorithm;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayoutCreateRequest
 */
@JsonPropertyOrder({
  PayoutCreateRequest.JSON_PROPERTY_PAYOUT_ID,
  PayoutCreateRequest.JSON_PROPERTY_MERCHANT_ID,
  PayoutCreateRequest.JSON_PROPERTY_AMOUNT,
  PayoutCreateRequest.JSON_PROPERTY_CURRENCY,
  PayoutCreateRequest.JSON_PROPERTY_ROUTING,
  PayoutCreateRequest.JSON_PROPERTY_CONNECTOR,
  PayoutCreateRequest.JSON_PROPERTY_CONFIRM,
  PayoutCreateRequest.JSON_PROPERTY_PAYOUT_TYPE,
  PayoutCreateRequest.JSON_PROPERTY_PAYOUT_METHOD_DATA,
  PayoutCreateRequest.JSON_PROPERTY_BILLING,
  PayoutCreateRequest.JSON_PROPERTY_CUSTOMER_ID,
  PayoutCreateRequest.JSON_PROPERTY_AUTO_FULFILL,
  PayoutCreateRequest.JSON_PROPERTY_EMAIL,
  PayoutCreateRequest.JSON_PROPERTY_NAME,
  PayoutCreateRequest.JSON_PROPERTY_PHONE,
  PayoutCreateRequest.JSON_PROPERTY_PHONE_COUNTRY_CODE,
  PayoutCreateRequest.JSON_PROPERTY_CLIENT_SECRET,
  PayoutCreateRequest.JSON_PROPERTY_RETURN_URL,
  PayoutCreateRequest.JSON_PROPERTY_BUSINESS_COUNTRY,
  PayoutCreateRequest.JSON_PROPERTY_BUSINESS_LABEL,
  PayoutCreateRequest.JSON_PROPERTY_DESCRIPTION,
  PayoutCreateRequest.JSON_PROPERTY_ENTITY_TYPE,
  PayoutCreateRequest.JSON_PROPERTY_RECURRING,
  PayoutCreateRequest.JSON_PROPERTY_METADATA,
  PayoutCreateRequest.JSON_PROPERTY_PAYOUT_TOKEN,
  PayoutCreateRequest.JSON_PROPERTY_PROFILE_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-28T20:00:07.865622+05:30[Asia/Kolkata]")
public class PayoutCreateRequest {
  public static final String JSON_PROPERTY_PAYOUT_ID = "payout_id";
  private JsonNullable<String> payoutId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
  private String merchantId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_ROUTING = "routing";
  private JsonNullable<RoutingAlgorithm> routing = JsonNullable.<RoutingAlgorithm>undefined();

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private JsonNullable<List<Connector>> connector = JsonNullable.<List<Connector>>undefined();

  public static final String JSON_PROPERTY_CONFIRM = "confirm";
  private Boolean confirm = false;

  public static final String JSON_PROPERTY_PAYOUT_TYPE = "payout_type";
  private PayoutType payoutType;

  public static final String JSON_PROPERTY_PAYOUT_METHOD_DATA = "payout_method_data";
  private JsonNullable<PayoutMethodData> payoutMethodData = JsonNullable.<PayoutMethodData>undefined();

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<Object> billing = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_AUTO_FULFILL = "auto_fulfill";
  private Boolean autoFulfill = false;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_COUNTRY_CODE = "phone_country_code";
  private JsonNullable<String> phoneCountryCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_SECRET = "client_secret";
  private String clientSecret;

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private String returnUrl;

  public static final String JSON_PROPERTY_BUSINESS_COUNTRY = "business_country";
  private CountryAlpha2 businessCountry;

  public static final String JSON_PROPERTY_BUSINESS_LABEL = "business_label";
  private JsonNullable<String> businessLabel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entity_type";
  private PayoutEntityType entityType;

  public static final String JSON_PROPERTY_RECURRING = "recurring";
  private JsonNullable<Boolean> recurring = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_PAYOUT_TOKEN = "payout_token";
  private JsonNullable<String> payoutToken = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROFILE_ID = "profile_id";
  private JsonNullable<String> profileId = JsonNullable.<String>undefined();

  public PayoutCreateRequest() {
  }

  public PayoutCreateRequest payoutId(String payoutId) {
    this.payoutId = JsonNullable.<String>of(payoutId);
    
    return this;
  }

   /**
   * Unique identifier for the payout. This ensures idempotency for multiple payouts that have been done by a single merchant. This field is auto generated and is returned in the API response.
   * @return payoutId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutId() {
        return payoutId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutId_JsonNullable() {
    return payoutId;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  public void setPayoutId_JsonNullable(JsonNullable<String> payoutId) {
    this.payoutId = payoutId;
  }

  public void setPayoutId(String payoutId) {
    this.payoutId = JsonNullable.<String>of(payoutId);
  }


  public PayoutCreateRequest merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * This is an identifier for the merchant account. This is inferred from the API key provided during the request
   * @return merchantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public PayoutCreateRequest amount(Long amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The payout amount. Amount for the payout in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }


  public PayoutCreateRequest currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public PayoutCreateRequest routing(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);
    
    return this;
  }

   /**
   * Get routing
   * @return routing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RoutingAlgorithm getRouting() {
        return routing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RoutingAlgorithm> getRouting_JsonNullable() {
    return routing;
  }
  
  @JsonProperty(JSON_PROPERTY_ROUTING)
  public void setRouting_JsonNullable(JsonNullable<RoutingAlgorithm> routing) {
    this.routing = routing;
  }

  public void setRouting(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);
  }


  public PayoutCreateRequest connector(List<Connector> connector) {
    this.connector = JsonNullable.<List<Connector>>of(connector);
    
    return this;
  }

  public PayoutCreateRequest addConnectorItem(Connector connectorItem) {
    if (this.connector == null || !this.connector.isPresent()) {
      this.connector = JsonNullable.<List<Connector>>of(new ArrayList<>());
    }
    try {
      this.connector.get().add(connectorItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * This allows the merchant to manually select a connector with which the payout can go through
   * @return connector
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<Connector> getConnector() {
        return connector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Connector>> getConnector_JsonNullable() {
    return connector;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  public void setConnector_JsonNullable(JsonNullable<List<Connector>> connector) {
    this.connector = connector;
  }

  public void setConnector(List<Connector> connector) {
    this.connector = JsonNullable.<List<Connector>>of(connector);
  }


  public PayoutCreateRequest confirm(Boolean confirm) {
    
    this.confirm = confirm;
    return this;
  }

   /**
   * The boolean value to create payout with connector
   * @return confirm
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIRM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getConfirm() {
    return confirm;
  }


  @JsonProperty(JSON_PROPERTY_CONFIRM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfirm(Boolean confirm) {
    this.confirm = confirm;
  }


  public PayoutCreateRequest payoutType(PayoutType payoutType) {
    
    this.payoutType = payoutType;
    return this;
  }

   /**
   * Get payoutType
   * @return payoutType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayoutType getPayoutType() {
    return payoutType;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayoutType(PayoutType payoutType) {
    this.payoutType = payoutType;
  }


  public PayoutCreateRequest payoutMethodData(PayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutMethodData>of(payoutMethodData);
    
    return this;
  }

   /**
   * Get payoutMethodData
   * @return payoutMethodData
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutMethodData getPayoutMethodData() {
        return payoutMethodData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutMethodData> getPayoutMethodData_JsonNullable() {
    return payoutMethodData;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  public void setPayoutMethodData_JsonNullable(JsonNullable<PayoutMethodData> payoutMethodData) {
    this.payoutMethodData = payoutMethodData;
  }

  public void setPayoutMethodData(PayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutMethodData>of(payoutMethodData);
  }


  public PayoutCreateRequest billing(Object billing) {
    this.billing = JsonNullable.<Object>of(billing);
    
    return this;
  }

   /**
   * The billing address for the payout
   * @return billing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<Object> billing) {
    this.billing = billing;
  }

  public void setBilling(Object billing) {
    this.billing = JsonNullable.<Object>of(billing);
  }


  public PayoutCreateRequest customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The identifier for the customer object. If not provided the customer ID will be autogenerated.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public PayoutCreateRequest autoFulfill(Boolean autoFulfill) {
    
    this.autoFulfill = autoFulfill;
    return this;
  }

   /**
   * Set to true to confirm the payout without review, no further action required
   * @return autoFulfill
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAutoFulfill() {
    return autoFulfill;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoFulfill(Boolean autoFulfill) {
    this.autoFulfill = autoFulfill;
  }


  public PayoutCreateRequest email(String email) {
    this.email = JsonNullable.<String>of(email);
    
    return this;
  }

   /**
   * description: The customer&#39;s email address
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public PayoutCreateRequest name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * description: The customer&#39;s name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public PayoutCreateRequest phone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
    
    return this;
  }

   /**
   * The customer&#39;s phone number
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public PayoutCreateRequest phoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
    
    return this;
  }

   /**
   * The country code for the customer phone number
   * @return phoneCountryCode
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhoneCountryCode() {
        return phoneCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneCountryCode_JsonNullable() {
    return phoneCountryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  public void setPhoneCountryCode_JsonNullable(JsonNullable<String> phoneCountryCode) {
    this.phoneCountryCode = phoneCountryCode;
  }

  public void setPhoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
  }


  public PayoutCreateRequest clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * It&#39;s a token used for client side verification.
   * @return clientSecret
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientSecret() {
    return clientSecret;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public PayoutCreateRequest returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * The URL to redirect after the completion of the operation
   * @return returnUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReturnUrl() {
    return returnUrl;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  public PayoutCreateRequest businessCountry(CountryAlpha2 businessCountry) {
    
    this.businessCountry = businessCountry;
    return this;
  }

   /**
   * Get businessCountry
   * @return businessCountry
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CountryAlpha2 getBusinessCountry() {
    return businessCountry;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBusinessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = businessCountry;
  }


  public PayoutCreateRequest businessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
    
    return this;
  }

   /**
   * Business label of the merchant for this payout
   * @return businessLabel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBusinessLabel() {
        return businessLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBusinessLabel_JsonNullable() {
    return businessLabel;
  }
  
  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  public void setBusinessLabel_JsonNullable(JsonNullable<String> businessLabel) {
    this.businessLabel = businessLabel;
  }

  public void setBusinessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
  }


  public PayoutCreateRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the payout
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PayoutCreateRequest entityType(PayoutEntityType entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayoutEntityType getEntityType() {
    return entityType;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityType(PayoutEntityType entityType) {
    this.entityType = entityType;
  }


  public PayoutCreateRequest recurring(Boolean recurring) {
    this.recurring = JsonNullable.<Boolean>of(recurring);
    
    return this;
  }

   /**
   * Specifies whether or not the payout request is recurring
   * @return recurring
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getRecurring() {
        return recurring.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECURRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRecurring_JsonNullable() {
    return recurring;
  }
  
  @JsonProperty(JSON_PROPERTY_RECURRING)
  public void setRecurring_JsonNullable(JsonNullable<Boolean> recurring) {
    this.recurring = recurring;
  }

  public void setRecurring(Boolean recurring) {
    this.recurring = JsonNullable.<Boolean>of(recurring);
  }


  public PayoutCreateRequest metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PayoutCreateRequest payoutToken(String payoutToken) {
    this.payoutToken = JsonNullable.<String>of(payoutToken);
    
    return this;
  }

   /**
   * Provide a reference to a stored payment method
   * @return payoutToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutToken() {
        return payoutToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutToken_JsonNullable() {
    return payoutToken;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_TOKEN)
  public void setPayoutToken_JsonNullable(JsonNullable<String> payoutToken) {
    this.payoutToken = payoutToken;
  }

  public void setPayoutToken(String payoutToken) {
    this.payoutToken = JsonNullable.<String>of(payoutToken);
  }


  public PayoutCreateRequest profileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);
    
    return this;
  }

   /**
   * The business profile to use for this payment, if not passed the default business profile associated with the merchant account will be used.
   * @return profileId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getProfileId() {
        return profileId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProfileId_JsonNullable() {
    return profileId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  public void setProfileId_JsonNullable(JsonNullable<String> profileId) {
    this.profileId = profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutCreateRequest payoutCreateRequest = (PayoutCreateRequest) o;
    return equalsNullable(this.payoutId, payoutCreateRequest.payoutId) &&
        Objects.equals(this.merchantId, payoutCreateRequest.merchantId) &&
        Objects.equals(this.amount, payoutCreateRequest.amount) &&
        Objects.equals(this.currency, payoutCreateRequest.currency) &&
        equalsNullable(this.routing, payoutCreateRequest.routing) &&
        equalsNullable(this.connector, payoutCreateRequest.connector) &&
        Objects.equals(this.confirm, payoutCreateRequest.confirm) &&
        Objects.equals(this.payoutType, payoutCreateRequest.payoutType) &&
        equalsNullable(this.payoutMethodData, payoutCreateRequest.payoutMethodData) &&
        equalsNullable(this.billing, payoutCreateRequest.billing) &&
        Objects.equals(this.customerId, payoutCreateRequest.customerId) &&
        Objects.equals(this.autoFulfill, payoutCreateRequest.autoFulfill) &&
        equalsNullable(this.email, payoutCreateRequest.email) &&
        equalsNullable(this.name, payoutCreateRequest.name) &&
        equalsNullable(this.phone, payoutCreateRequest.phone) &&
        equalsNullable(this.phoneCountryCode, payoutCreateRequest.phoneCountryCode) &&
        Objects.equals(this.clientSecret, payoutCreateRequest.clientSecret) &&
        Objects.equals(this.returnUrl, payoutCreateRequest.returnUrl) &&
        Objects.equals(this.businessCountry, payoutCreateRequest.businessCountry) &&
        equalsNullable(this.businessLabel, payoutCreateRequest.businessLabel) &&
        Objects.equals(this.description, payoutCreateRequest.description) &&
        Objects.equals(this.entityType, payoutCreateRequest.entityType) &&
        equalsNullable(this.recurring, payoutCreateRequest.recurring) &&
        equalsNullable(this.metadata, payoutCreateRequest.metadata) &&
        equalsNullable(this.payoutToken, payoutCreateRequest.payoutToken) &&
        equalsNullable(this.profileId, payoutCreateRequest.profileId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(payoutId), merchantId, amount, currency, hashCodeNullable(routing), hashCodeNullable(connector), confirm, payoutType, hashCodeNullable(payoutMethodData), hashCodeNullable(billing), customerId, autoFulfill, hashCodeNullable(email), hashCodeNullable(name), hashCodeNullable(phone), hashCodeNullable(phoneCountryCode), clientSecret, returnUrl, businessCountry, hashCodeNullable(businessLabel), description, entityType, hashCodeNullable(recurring), hashCodeNullable(metadata), hashCodeNullable(payoutToken), hashCodeNullable(profileId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutCreateRequest {\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    confirm: ").append(toIndentedString(confirm)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    payoutMethodData: ").append(toIndentedString(payoutMethodData)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    autoFulfill: ").append(toIndentedString(autoFulfill)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneCountryCode: ").append(toIndentedString(phoneCountryCode)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    businessCountry: ").append(toIndentedString(businessCountry)).append("\n");
    sb.append("    businessLabel: ").append(toIndentedString(businessLabel)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    payoutToken: ").append(toIndentedString(payoutToken)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

